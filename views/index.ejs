<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>Recommender</title>
  <script src="../bower_components/react/react-dom.js"></script>
  <script src="../bower_components/react/react.js"></script>
  <script src="../bower_components/jquery/dist/jquery.js"></script>
  <script src="../bower_components/babel/browser.js"></script>
  <script src="javascripts/react-multiselect.js"></script>


  <link rel='stylesheet' href='../bower_components/bootstrap/dist/css/bootstrap.css' />
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <link rel='stylesheet' href='/stylesheets/flexBox.css' />
  <link rel='stylesheet' href='/stylesheets/bootstrap-multiselect.css' type="text/css" />
  <link rel='stylesheet' href='/stylesheets/react-select.css' type="text/css" />
  <link rel='stylesheet' href='/stylesheets/basic.css' type="text/css" />
</head>
<body>



<br/>
<div id="content">

</div>
<br/>
<div id="chkBox" ref="columnDropDown">
</div>
<div id="chkBox12">
</div>
<br/>
<div id="multiselect-basic">

</div>



<script type="text/babel">


  var MainComponent = React.createClass({
    getInitialState: function() {
      return {data: []};
    },
    componentDidMount: function() {
      $.ajax({
        url: 'http://localhost:3000/mainData',
        dataType: 'json',
        cache: false,
        success: function(data) {
          this.setState({data: data});
        }.bind(this),
        error: function(xhr, status, err) {
          console.error(this.props.url, status, err.toString());
        }.bind(this)
      });
    },
    render: function() {
      return (
              <div>

                    <div className="parentContainer">
                            {
                              this.state.data.map(function(phone) {
                              return (
                                <div class="tile">
                                      <div className ="child header tile-title   " >{phone.CompanyName}</div>
                              <div className ="child specs" >{phone.PhoneName}</div>
                              <div className ="child specs" >{phone.PhysicalSize}</div>
                              </div>
                              );
                            })
                            }
                    </div>
              </div>

      );
    }
  });

  React.render(<MainComponent />, document.getElementById('content'));


  var FilterComponent = React.createClass({displayName: "Basic",
    getInitialState: function() {
      return {data: []};
    },
    componentDidMount: function() {
      $.ajax({
        url: 'http://localhost:3000/perfColoumnData',
        dataType: 'json',
        cache: false,
        success: function(data) {
          this.setState({data: data});
        }.bind(this),
        error: function(xhr, status, err) {
          console.error(this.props.url, status, err.toString());
        }.bind(this)
      });
    },
    getDefaultProps: function() {
      return {items: [],perfDataProp: []}
    },
    handleItemSelected: function(item) {
      console.log('Item selected: '+item.id+' - '+item.text)
      this.props.setPerfColData(item);
    },
    handleItemDeselected: function(item) {
      console.log('Item deselected: '+item.id+' - '+item.text)
    },
    render: function() {
      return (

      React.createElement(MultiSelect, {
        items:  this.props.perfDataProp,
        onItemSelected: this.handleItemSelected,
        onItemDeselected: this.handleItemDeselected}

      ));
    }
  })
 // React.render(React.createElement(FilterComponent), document.getElementById('multiselect-basic'));


  var Parent = React.createClass({

    getInitialState: function () {

      return {perfColData: [], colData:[],mainData:[], initPerfColData:[]}

    },
    componentDidMount: function() {
      $.ajax({
        url: 'http://localhost:3000/perfColoumnData',
        dataType: 'json',
        cache: false,
        success: function(data) {
          this.setState({initPerfColData: data});
        }.bind(this),
        error: function(xhr, status, err) {
          console.error(this.props.url, status, err.toString());
        }.bind(this)
      });
    },

    render: function () {

      var me = this;

      var setLastLabel = function (label) {

        me.setState({lastLabelClicked: label});

      };
      var setPerfColData = function (data) {
        console.log('Item selected in parent: '+data.id+' - '+data.text)
        me.setState({perfColData: data});

      };
      var setColData = function (data) {

        me.setState({colData: data});

      };
      var setMainData = function (data) {

        me.setState({mainData: data});

      };

      return(
      <div>

      <FilterComponent perfDataProp={this.state.initPerfColData} setPerfColData={setPerfColData} />

      </div>)
      ;

    }

  });
  React.render(<Parent />, document.getElementById('multiselect-basic'));

</script>

</body>
</html>
